# SCUBA 1.0.0 
# Simple CUstomisable Bytecode Analysis tool

# Configurations for the SCUBA environment

# (1) 
analysis.framework bcel
#bcel
#asm

# (2)
analysis.kind dynamic
#dynamic
#static

# (3) Default is Java; Also, analysing Scala bytecode is supported.
language java

# (4) 
# Whether you would like SCUBA to analyse only the types of the subject benchmark example, or
# you prefer including the external types of third-party dependency libraries, e.g., Apache commons io, slf4j jars and etc  
# The implementation of the business logic related to this  configuration is weak - more robust logic is still required;
external excluded
#excluded
#!

# Input model: an archive file of type ZIP or JAR (only Jars and Zips are supported so far) 
# Default benchmark example: SCUBA  (mySelf!) {PRE-COND: "gradle distZip" has been run}
#                                               e.g., rosemary@kali:~/JPAT/SCUBA/master$ gradle clean compileJava build distZip run 

# Also, for simple input you may use ./build/libs/scuba-1.0.0.jar {PRE-COND: "gradle build" has been run}

binary.root.path ./benchmark.examples/java/sablecc/sablecc.jar
# ./benchmark.examples/java/scuba-1.0.0.zip
#./benchmark.examples/java/sablecc/sablecc.jar
#./benchmark.examples/scala/LaTeXDraw-3.3.1-bin.zip
#./benchmark.examples/scala/zero-drill-scala.jar
