# SCUBA 1.0.0 
# Simple CUstomisable Bytecode Analysis tool

# Configurations for the SCUBA environment

# (1) 
analysis.framework asm
#bcel
#asm

# (2)
analysis.kind static
#dynamic
#static

# (3) Default language supported is Java; And Scala bytecode is also supported; 
language Scala

# (4) 
# Whether you would like SCUBA to analyse only the types of the subject benchmark example, or
# you prefer including the external types of third-party dependency libraries, e.g., Apache commons io, slf4j jars and etc  
external excluded
#excluded
#!

# Input model for SCUBA
# An archive file of type ZIP or JAR (only Jars and Zips are supported so far) 
# To analyse SCUBA  (mySelf!) {PRE-COND: "gradle distZip" has been run}
#                                               e.g., rosemary@kali:~/JPAT/SCUBA/master$ gradle clean compileJava build distZip run 

binary.root.path ./benchmark.examples/scala/LaTeXDraw-3.3.1-bin.zip
#./benchmark.examples/scala/zero-drill-scala.jar
#./benchmark.examples/scala/LaTeXDraw-3.3.1-bin.zip
#./benchmark.examples/java/sablecc/sablecc.jar
#./benchmark.examples/java/gradle-2.4-bin.zip
#./benchmark.examples/java/scuba-1.0.0.zip
# You can provide a name of your benchmark example;
# if left empty, then SCUBA will extract the name from the Archive file provided 
benchmarkExample.name 


# As Future Works, the following are a couple of features planned to be addressed by SCUBA

wallClock yes
coupling analysis
cycle analysis
profileOwnerObject yes
analyseMethodArguments true
methodsContainLoop yes
cyclomaticComplexityLowerBound 21
printShadowCallStack true
dependencyAnalysisLevel CLASS
#DependencyAnalysisLevel = PACKAGE